#' Load TF and target gene matrix prior
#' @return geneTF matrix
#' @example geneTF <- load_geneTF\(\)
#' @export

load_geneTF <- function() {


  print("loading TF-gene matrix...")


  df_geneTF_raw <-data.table::fread("../data/tf-target-matrix_April.csv")

  df_geneTF <- df_geneTF_raw[,-1]
  rownames(df_geneTF) <- df_geneTF_raw[,1]


  df_TFs <- as.data.frame(data.table::fread("../data/TFs_Osmanbeyoglu.csv"))

  TFs_cond <-  df_TFs[,'Name'][(df_TFs[,'Is TF']=="Yes") & (df_TFs[,'TF assessment']=="Known motif")]

  TFs_comm <- intersect(colnames(df_geneTF), TFs_cond)

  df_geneTF_comm <- df_geneTF[, TFs_comm]

  df_geneTF_filtered <- df_geneTF_comm[rowSums(df_geneTF_comm)>0, ]

  return(df_geneTF_filtered) # 37603   303

}
# Y <- read.table("../data/Y_32-1.csv", sep=",", header = TRUE, row.names = 1, stringsAsFactors = FALSE, check.names = FALSE)
# gene_list <- rownames(Y)

filter_gene <- function(geneTF_matrix, gene_lowbound){
  return(geneTF_matrix[rowSums(geneTF_matrix != 0) > gene_lowbound,])
}

filter_TF <- function(geneTF_matrix, TF_lowbound, TF_upbound){
  TFs_cond <- (colSums(geneTF_matrix !=0) < TF_upbound*nrow(geneTF_matrix)) & (colSums(geneTF_matrix !=0) > TF_lowbound)
  return(geneTF_matrix[,TFs_cond])
}

filter_geneTF <- function(geneTF_matrix, gene_list, TF_upbound=0.8, TF_lowbound=10, gene_lowbound=5){

  gene_comm <- intersect(rownames(geneTF_matrix), gene_list)

  # TF_comm <- intersect(colnames(geneTF_matrix), gene_list)

  df_geneTF <- geneTF_matrix[gene_comm,]

  df_geneTF_1 <- filter_gene(df_geneTF, gene_lowbound)

  df_geneTF_2 <- filter_TF(df_geneTF_1, TF_lowbound, TF_upbound)

  df_geneTF_3 <- filter_gene(df_geneTF_2, gene_lowbound)

  df_geneTF_4 <- filter_TF(df_geneTF_3, TF_lowbound, TF_upbound)

  return(df_geneTF_4)
}

